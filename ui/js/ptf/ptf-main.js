/**
 * Platformer
 * 
 * @title      Platformer
 * @desc       Initialize the platformer
 * @copyright  (c) 2020, Stephino
 * @author     Mark Jivko <stephino.team@gmail.com>
 * @package    stephino-rpg
 * @license    GPL v3+, gnu.org/licenses/gpl-3.0.txt
 */
/* global stephino_rpg_data, Phaser */
// Stephino RPG Platformer
var stephino_rpg_ptf = null; jQuery(document).ready(function () { window.PhaserGlobal = {hideBanner: true}; var gamePluginVer = jQuery('body').attr('data-plugin-version'); var gameId = parseInt(jQuery('body').attr('data-id'), 10); var gamePtfVer = `${gamePluginVer}.${gameId}.${parseInt(jQuery('body').attr('data-version'), 10)}`; do { if (0 === gameId) { break; } jQuery('#stephino-rpg-ptf').html(''); var mapUrl = new URL(stephino_rpg_data.ajax_url); mapUrl.searchParams.set('method', 'js'); mapUrl.searchParams.set('view', 'ptf'); mapUrl.searchParams.set('viewData', gameId); mapUrl.searchParams.set('ver', gamePtfVer); var tilesUrl = new URL(stephino_rpg_data.theme_url + '/img/ui/ptf-tiles.png'); tilesUrl.searchParams.set('ver', gamePluginVer); var playerUrl = new URL(stephino_rpg_data.theme_url + '/img/ui/ptf-player.png'); playerUrl.searchParams.set('ver', gamePluginVer); var labels = { tilemap: 'stephino.rpg.map.' + gamePtfVer, tiles: 'stephino.rpg.tiles.' + gamePluginVer, player: 'stephino.rpg.player.' + gamePluginVer }; stephino_rpg_ptf = { map: null, world: null, cursors: null, player: { object: null, side: 'right' }, fx: { score: { current: 0, total: 0, object: jQuery('[data-role="score"]'), init: function() { if (!this.object.hasClass('active')) { stephino_rpg_ptf.map.layer.data.forEach(function(tileRow) { tileRow.forEach(function(tile) { if (18 === tile.index) { stephino_rpg_ptf.fx.score.total++; } }); }); this.object.addClass('active'); this.display(); if (0 === stephino_rpg_ptf.fx.score.total) { this.update(); } } }, update: function() { if (null !== stephino_rpg_ptf.fx.end.status) { return; } stephino_rpg_ptf.fx.score.current = stephino_rpg_ptf.fx.score.total; stephino_rpg_ptf.map.layer.data.forEach(function(tileRow) { tileRow.forEach(function(tile) { if (18 === tile.index) { stephino_rpg_ptf.fx.score.current--; } }); }); if (stephino_rpg_ptf.fx.score.current >= stephino_rpg_ptf.fx.score.total) { stephino_rpg_ptf.map.layer.data.forEach(function(tileRow) { tileRow.forEach(function(tile) { if (20 === tile.index) { tile.index = 21; } }); }); } stephino_rpg_ptf.fx.sound('cellTap'); this.display(); }, display: function() { this.object.html(`<span>${this.current}</span> / <span>${this.total}</span>`); } }, sound: function(soundId) { parent.postMessage({msgType: 'sound', msgData: soundId}, '*'); }, end: { status: null, game: function(status) { do { if (null !== this.status) { break; } this.status = !!status; stephino_rpg_ptf.player.object.alpha = 0; parent.postMessage({msgType: 'end', msgData: this.status}, '*'); } while(false); } }, collide: function (sprite, tile) { if (null === stephino_rpg_ptf.fx.end.status) { switch (tile.index) { case 18: tile.index = 1; stephino_rpg_ptf.fx.score.update(); break; case 19: tile.index = 1; stephino_rpg_ptf.fx.end.game(false); break; case 21: tile.index = 20; stephino_rpg_ptf.fx.end.game(true); break; } stephino_rpg_ptf.world.dirty = true; } return false; } }, game: new Phaser.Game(stephino_rpg_data.ptf_size[0], stephino_rpg_data.ptf_size[1], Phaser.CANVAS, 'stephino-rpg-ptf', { preload: function () { this.load.tilemap(labels.tilemap, mapUrl.toString(), null, Phaser.Tilemap.TILED_JSON); this.load.image(labels.tiles, tilesUrl.toString()); this.load.spritesheet(labels.player, playerUrl.toString(), 128, 128); }, create: function () { this.physics.startSystem(Phaser.Physics.ARCADE); this.physics.arcade.gravity.y = 490; this.scale.scaleMode = Phaser.ScaleManager.NO_SCALE; this.scale.fullScreenScaleMode = Phaser.ScaleManager.EXACT_FIT; stephino_rpg_ptf.map = this.add.tilemap(labels.tilemap); stephino_rpg_ptf.map.addTilesetImage('stephino-rpg-tiles', labels.tiles); stephino_rpg_ptf.map.setCollisionBetween(2, 17); stephino_rpg_ptf.map.setTileIndexCallback(18, stephino_rpg_ptf.fx.collide, this); stephino_rpg_ptf.map.setTileIndexCallback(19, stephino_rpg_ptf.fx.collide, this); stephino_rpg_ptf.map.setTileIndexCallback(21, stephino_rpg_ptf.fx.collide, this); stephino_rpg_ptf.world = stephino_rpg_ptf.map.createLayer('stephino-rpg-layer'); stephino_rpg_ptf.world.renderSettings.enableScrollDelta = false; stephino_rpg_ptf.world.resizeWorld(); stephino_rpg_ptf.player.object = this.add.sprite(0, 0, labels.player); this.physics.enable(stephino_rpg_ptf.player.object); this.camera.follow(stephino_rpg_ptf.player.object); stephino_rpg_ptf.player.object.body.setSize(15, 55, 57, 62); stephino_rpg_ptf.player.object.body.bounce.y = 0; stephino_rpg_ptf.player.object.body.drag.y = 20; stephino_rpg_ptf.player.object.body.drag.x = 100; stephino_rpg_ptf.player.object.body.linearDamping = 0.1; stephino_rpg_ptf.player.object.body.collideWorldBounds = true; stephino_rpg_ptf.player.object.animations.add('left', [0, 1, 2, 3], 10, true); stephino_rpg_ptf.player.object.animations.add('turn', [4], 20, true); stephino_rpg_ptf.player.object.animations.add('right', [5, 6, 7, 8], 10, true); stephino_rpg_ptf.player.object.animations.play('turn'); stephino_rpg_ptf.cursors = this.input.keyboard.createCursorKeys(); stephino_rpg_ptf.fx.score.init(); }, update: function () { this.physics.arcade.collide(stephino_rpg_ptf.player.object, stephino_rpg_ptf.world); if (null === stephino_rpg_ptf.fx.end.status && stephino_rpg_ptf.player.object.y + stephino_rpg_ptf.player.object.height >= stephino_rpg_ptf.map.heightInPixels) { stephino_rpg_ptf.fx.end.game(false); } if (stephino_rpg_ptf.cursors.up.isDown) { if (stephino_rpg_ptf.player.object.body.onFloor()) { stephino_rpg_ptf.player.object.body.velocity.y = -500; } } if (stephino_rpg_ptf.cursors.down.isDown) { stephino_rpg_ptf.player.object.body.velocity.x = 0; if (!stephino_rpg_ptf.player.object.body.onFloor()) { stephino_rpg_ptf.player.object.body.velocity.y = 450; } if ('front' !== stephino_rpg_ptf.player.side) { stephino_rpg_ptf.player.object.animations.stop(); stephino_rpg_ptf.player.object.frame = 4; stephino_rpg_ptf.player.side = 'front'; } } if (stephino_rpg_ptf.cursors.left.isDown) { stephino_rpg_ptf.player.object.body.velocity.x = -400; if ('left' !== stephino_rpg_ptf.player.side) { stephino_rpg_ptf.player.side = 'left'; stephino_rpg_ptf.player.object.play(stephino_rpg_ptf.player.side); } } else if (stephino_rpg_ptf.cursors.right.isDown) { stephino_rpg_ptf.player.object.body.velocity.x = 400; if ('right' !== stephino_rpg_ptf.player.side) { stephino_rpg_ptf.player.side = 'right'; stephino_rpg_ptf.player.object.play(stephino_rpg_ptf.player.side); } } else { if ('idle' !== stephino_rpg_ptf.player.side) { stephino_rpg_ptf.player.object.animations.stop(); switch (stephino_rpg_ptf.player.side) { case 'left': stephino_rpg_ptf.player.object.frame = 2; break; case 'right': stephino_rpg_ptf.player.object.frame = 7; break; case 'front': stephino_rpg_ptf.player.object.frame = 4; break; } stephino_rpg_ptf.player.side = 'idle'; } } }, render: function () {} }, true) }; } while(false);});